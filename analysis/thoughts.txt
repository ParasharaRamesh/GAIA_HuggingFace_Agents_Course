List of tools I need:

    File reading tools:

    1. Parse Excel as a DataFrame in python (code agent can do this)
    2. Parse MP3 -> TTS (X)
    3. Parse Youtube url -> audio -> transcript (X)
    4. Parse Youtube url -> video (X) -> analysis
    5. Parse Images (use multimodal LLM)

    Search Tools: (X)

    1. web browser for search
    2. web scraper
    3. wikipedia scraper (perhaps the code agent can do it)
    4. Arxiv tools (academic journal scraper)

    Code Agent:

    1. python code agent ( should cover all math )

    Generic Agent:
    . just gives some answer

    RAG/Local vector db: (not needed!)

    - Needed for indexing the web page results/wiki page results maybe?

Agents workflow diagram refer to analysis/visualization.ipynb

Thoughts/Potential TODOS:

. make all agents ReACT agent so that they can act within themselves
. use langfuse for debugging
. can use vjepa and vjepa 2 for visual analysis tools
. return only a part of the chunk (example summary if present) to the LLM context window while indexing the rest into the DB
. perhaps a requests tool, this way it would have the tools download anything and if need be save it.

TODO:

1. finish audio agent in the similar manner
2. go to code agent
3. then go to visual agent vjepa whatever
4. then go to planner
5. add api keys and what not
6. test each agent flow seperately by giving custom questions


Important Links:

* https://huggingface.co/datasets/gaia-benchmark/GAIA
* https://huggingface.co/learn/agents-course/unit4/introduction
* https://huggingface.co/blog/open-deep-research
* https://github.com/huggingface/smolagents/blob/main/examples/open_deep_research/scripts/text_inspector_tool.py
* https://python.langchain.com/docs/integrations/tools/
* Refer to that article from langgraph which talks about how to build multi agent systems (swarm)
